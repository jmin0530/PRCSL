/workspace/ACCV_2024/PRCSL/src/approach/der.py:105: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  batch_exemplars.logits[i] = torch.tensor(lgt).clone().detach()
Traceback (most recent call last):
  File "/workspace/ACCV_2024/PRCSL/src/main.py", line 295, in <module>
    
  File "/workspace/ACCV_2024/PRCSL/src/main.py", line 243, in main
    if args.approach != 'der':
  File "/workspace/ACCV_2024/PRCSL/src/approach/incremental_learning.py", line 55, in train
    self.train_loop(t, trn_loader, val_loader)
  File "/workspace/ACCV_2024/PRCSL/src/approach/der.py", line 67, in train_loop
    
  File "/workspace/ACCV_2024/PRCSL/src/approach/incremental_learning.py", line 72, in train_loop
    self.train_epoch(t, trn_loader)
  File "/workspace/ACCV_2024/PRCSL/src/approach/der.py", line 88, in train_epoch
    self.optimizer.zero_grad()
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 435, in __next__
    data = self._next_data()
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 475, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 44, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 44, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/workspace/ACCV_2024/PRCSL/src/datasets/memory_dataset.py", line 37, in __getitem__
    no_aug_x = self.no_aug_transforms(no_aug_x)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torchvision/transforms/transforms.py", line 67, in __call__
    img = t(img)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torchvision/transforms/transforms.py", line 104, in __call__
    return F.to_tensor(pic)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torchvision/transforms/functional.py", line 96, in to_tensor
    img = torch.ByteTensor(torch.ByteStorage.from_buffer(pic.tobytes()))
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/PIL/Image.py", line 815, in tobytes
    bytes_consumed, errcode, data = e.encode(bufsize)
KeyboardInterrupt
