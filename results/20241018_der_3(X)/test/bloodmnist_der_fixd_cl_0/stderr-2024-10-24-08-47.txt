/workspace/ACCV_2024/PRCSL/src/approach/der.py:112: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  batch_exemplars.logits[i] = torch.tensor(lgt).clone().detach()
Traceback (most recent call last):
  File "/workspace/ACCV_2024/PRCSL/src/main.py", line 303, in <module>
    main()
  File "/workspace/ACCV_2024/PRCSL/src/main.py", line 251, in main
    appr.train(t, trn_loader[t], val_loader[t])
  File "/workspace/ACCV_2024/PRCSL/src/approach/incremental_learning_der.py", line 56, in train
    self.train_loop(t, trn_loader, val_loader)
  File "/workspace/ACCV_2024/PRCSL/src/approach/der.py", line 68, in train_loop
    super().train_loop(t, trn_loader, val_loader)
  File "/workspace/ACCV_2024/PRCSL/src/approach/incremental_learning_der.py", line 73, in train_loop
    self.train_epoch(t, trn_loader)
  File "/workspace/ACCV_2024/PRCSL/src/approach/der.py", line 127, in train_epoch
    outputs_buff = self.model(buff_images.to(self.device))
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/workspace/ACCV_2024/PRCSL/src/networks/network.py", line 66, in forward
    x = self.model(x)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/workspace/ACCV_2024/PRCSL/src/networks/resnet32.py", line 101, in forward
    x = self.layer1(x)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/nn/modules/container.py", line 117, in forward
    input = module(input)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/workspace/ACCV_2024/PRCSL/src/networks/resnet32.py", line 27, in forward
    out = self.bn2(self.conv2(out))
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/nn/modules/batchnorm.py", line 111, in forward
    self.num_batches_tracked = self.num_batches_tracked + 1
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/nn/modules/module.py", line 791, in __setattr__
    if isinstance(value, Parameter):
KeyboardInterrupt
