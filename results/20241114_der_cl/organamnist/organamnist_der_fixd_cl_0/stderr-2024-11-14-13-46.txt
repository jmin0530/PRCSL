Traceback (most recent call last):
  File "/workspace/ACCV_2024/PRCSL/src/main.py", line 312, in <module>
    main()
  File "/workspace/ACCV_2024/PRCSL/src/main.py", line 260, in main
    appr.train(t, trn_loader[t], val_loader[t])
  File "/workspace/ACCV_2024/PRCSL/src/approach/incremental_learning.py", line 55, in train
    self.train_loop(t, trn_loader, val_loader)
  File "/workspace/ACCV_2024/PRCSL/src/approach/der.py", line 70, in train_loop
    super().train_loop(t, trn_loader, val_loader)
  File "/workspace/ACCV_2024/PRCSL/src/approach/incremental_learning_der.py", line 46, in train_loop
    self.train_epoch(t, trn_loader)
  File "/workspace/ACCV_2024/PRCSL/src/approach/der.py", line 88, in train_epoch
    buff_images, buff_logits = self.get_buff_data()
  File "/workspace/ACCV_2024/PRCSL/src/approach/der.py", line 115, in get_buff_data
    buff_images = apply_transform(deepcopy(self.exemplars_dataset.images[choice]), self.buffer_transform, True)
  File "/workspace/ACCV_2024/PRCSL/src/approach/augmentations/kornia_utils.py", line 39, in apply_transform
    out = transform(x)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/workspace/ACCV_2024/PRCSL/src/approach/augmentations/kornia_utils.py", line 128, in forward
    return self._do_transform(*args, **kwargs)
  File "/workspace/ACCV_2024/PRCSL/src/approach/augmentations/kornia_utils.py", line 113, in _do_transform
    x = super().forward(*args, **kwargs)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/kornia/augmentation/container/augment.py", line 443, in forward
    outputs = self.transform_op.transform(  # type: ignore
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/kornia/augmentation/container/ops.py", line 136, in transform
    outputs.append(op.transform(inp, module, param=param, extra_args=extra_arg))
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/kornia/augmentation/container/ops.py", line 186, in transform
    input = module(input, params=cls.get_instance_module_param(param), data_keys=[DataKey.INPUT], **extra_args)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/kornia/augmentation/base.py", line 233, in forward
    output = self.apply_func(in_tensor, params, flags)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/kornia/augmentation/_2d/base.py", line 128, in apply_func
    trans_matrix = self.generate_transformation_matrix(in_tensor, params, flags)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/kornia/augmentation/_2d/base.py", line 84, in generate_transformation_matrix
    trans_matrix = self.compute_transformation(in_tensor, params=params, flags=flags)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/kornia/augmentation/_2d/geometric/horizontal_flip.py", line 58, in compute_transformation
    flip_mat: Tensor = tensor([[-1, 0, w - 1], [0, 1, 0], [0, 0, 1]], device=input.device, dtype=input.dtype)
KeyboardInterrupt
