/workspace/ACCV_2024/PRCSL/src/main_split.py:284: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  train_class_split_size = trn_frequencies[i] // current_num_client
/workspace/ACCV_2024/PRCSL/src/main_split.py:285: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  val_class_split_size = val_frequencies[i] // current_num_client
/workspace/ACCV_2024/PRCSL/src/main_split.py:286: UserWarning: __floordiv__ is deprecated, and its behavior will change in a future version of pytorch. It currently rounds toward 0 (like the 'trunc' function NOT 'floor'). This results in incorrect rounding for negative values. To keep the current behavior, use torch.div(a, b, rounding_mode='trunc'), or for actual floor division, use torch.div(a, b, rounding_mode='floor').
  test_class_split_size = test_frequencies[i] // current_num_client
/workspace/ACCV_2024/PRCSL/src/approach/der_split_dp.py:104: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at  ../torch/csrc/utils/tensor_new.cpp:201.)
  class_data = list(torch.split(torch.tensor(class_data).detach(), self.dp_mean_batch))
Traceback (most recent call last):
  File "/workspace/ACCV_2024/PRCSL/src/main_split.py", line 393, in <module>
    main()
  File "/workspace/ACCV_2024/PRCSL/src/main_split.py", line 344, in main
    appr.train(t, client_loaders, taskcla)
  File "/workspace/ACCV_2024/PRCSL/src/approach/incremental_learning_split.py", line 63, in train
    self.train_loop(t, client_loaders, client_models)
  File "/workspace/ACCV_2024/PRCSL/src/approach/der_split_dp.py", line 79, in train_loop
    super().train_loop(t, client_loaders, client_models)
  File "/workspace/ACCV_2024/PRCSL/src/approach/incremental_learning_split_der.py", line 60, in train_loop
    valid_loss, valid_acc, _ = self.eval(t, client_loaders, completed_client, num_clients)
  File "/workspace/ACCV_2024/PRCSL/src/approach/der_split_dp.py", line 268, in eval
    for images, targets, _ in loader:
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 681, in __next__
    data = self._next_data()
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1348, in _next_data
    self._shutdown_workers()
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1474, in _shutdown_workers
    w.join(timeout=_utils.MP_STATUS_CHECK_INTERVAL)
  File "/opt/conda/envs/prcsl/lib/python3.8/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
  File "/opt/conda/envs/prcsl/lib/python3.8/multiprocessing/popen_fork.py", line 44, in wait
    if not wait([self.sentinel], timeout):
  File "/opt/conda/envs/prcsl/lib/python3.8/multiprocessing/connection.py", line 931, in wait
    ready = selector.select(timeout)
  File "/opt/conda/envs/prcsl/lib/python3.8/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
KeyboardInterrupt
