/workspace/ACCV_2024/PRCSL/src/approach/der.py:150: UserWarning: Using a target size (torch.Size([128])) that is different to the input size (torch.Size([128, 2])). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size.
  loss = self.alpha * F.mse_loss(torch.cat(outputs[:t], dim=1), targets)
Traceback (most recent call last):
  File "/workspace/ACCV_2024/PRCSL/src/main.py", line 290, in <module>
    main()
  File "/workspace/ACCV_2024/PRCSL/src/main.py", line 238, in main
    appr.train(t, trn_loader[t], val_loader[t])
  File "/workspace/ACCV_2024/PRCSL/src/approach/incremental_learning.py", line 55, in train
    self.train_loop(t, trn_loader, val_loader)
  File "/workspace/ACCV_2024/PRCSL/src/approach/der.py", line 64, in train_loop
    super().train_loop(t, trn_loader, val_loader)
  File "/workspace/ACCV_2024/PRCSL/src/approach/incremental_learning.py", line 86, in train_loop
    valid_loss, valid_acc, _ = self.eval(t, val_loader)
  File "/workspace/ACCV_2024/PRCSL/src/approach/der.py", line 133, in eval
    loss = self.criterion(t, outputs, targets.to(self.device), outputs_old)
  File "/workspace/ACCV_2024/PRCSL/src/approach/der.py", line 150, in criterion
    loss = self.alpha * F.mse_loss(torch.cat(outputs[:t], dim=1), targets)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/nn/functional.py", line 2659, in mse_loss
    expanded_input, expanded_target = torch.broadcast_tensors(input, target)
  File "/opt/conda/envs/prcsl/lib/python3.8/site-packages/torch/functional.py", line 71, in broadcast_tensors
    return _VF.broadcast_tensors(tensors)  # type: ignore
RuntimeError: The size of tensor a (2) must match the size of tensor b (128) at non-singleton dimension 1
